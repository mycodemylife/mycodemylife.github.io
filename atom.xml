<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mycodemylife.github.io</id>
    <title>七彩旋律</title>
    <updated>2020-11-13T01:28:44.701Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://mycodemylife.github.io"/>
    <link rel="self" href="https://mycodemylife.github.io/atom.xml"/>
    <logo>https://mycodemylife.github.io/images/avatar.png</logo>
    <icon>https://mycodemylife.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 七彩旋律</rights>
    <entry>
        <title type="html"><![CDATA[linux下tmp文件会被清理]]></title>
        <id>https://mycodemylife.github.io/post/linux-xia-tmp-wen-jian-hui-bei-qing-li/</id>
        <link href="https://mycodemylife.github.io/post/linux-xia-tmp-wen-jian-hui-bei-qing-li/">
        </link>
        <updated>2020-11-13T01:25:41.000Z</updated>
        <content type="html"><![CDATA[<p>查看规则：</p>
<pre><code>more /etc/cron.daily/tmpwatch
</code></pre>
<p>如果你想将强制删除30天没有访问的文件改为7天，只需将里面的720改为189即可。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Oracle中修改表相关内容]]></title>
        <id>https://mycodemylife.github.io/post/oracle-zhong-xiu-gai-biao-xiang-guan-nei-rong/</id>
        <link href="https://mycodemylife.github.io/post/oracle-zhong-xiu-gai-biao-xiang-guan-nei-rong/">
        </link>
        <updated>2020-11-12T06:03:09.000Z</updated>
        <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">字段的操作</th>
<th style="text-align:center">操作的方法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">修改列名（更新字段）</td>
<td style="text-align:center">alter table 表名 rename column 原列名 to 新列名;</td>
</tr>
<tr>
<td style="text-align:center">添加列</td>
<td style="text-align:center">alter table 表名 add 列名 列类型;</td>
</tr>
<tr>
<td style="text-align:center">删除列</td>
<td style="text-align:center">alter table 表名 drop column 列名；</td>
</tr>
<tr>
<td style="text-align:center">添加列并赋值</td>
<td style="text-align:center">alter table 表名 add 列名 列类型 default 需要赋的值；</td>
</tr>
<tr>
<td style="text-align:center">修改列的数据类型</td>
<td style="text-align:center">alter table 表名 modify 列名 列数据类型；</td>
</tr>
<tr>
<td style="text-align:center">增</td>
<td style="text-align:center">insert into 表名 values(字段1，字段2，字段3，......);</td>
</tr>
<tr>
<td style="text-align:center">删</td>
<td style="text-align:center">delete from 表名 where 列名 = 值；</td>
</tr>
<tr>
<td style="text-align:center">改（单个字段数据）</td>
<td style="text-align:center">update 表名 set 列名 = 值 where 判断条件；（如：where id = 100）</td>
</tr>
<tr>
<td style="text-align:center">改（多个字段数据）</td>
<td style="text-align:center">update  表名   set 列名1 = 值1,     列名2       =  值2        where 判断条件；（如：update t_user set name = '张三'，password = '123456'  where id = 10;）</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[shell脚本执行mysql操作]]></title>
        <id>https://mycodemylife.github.io/post/shell-jiao-ben-zhi-xing-mysql-cao-zuo/</id>
        <link href="https://mycodemylife.github.io/post/shell-jiao-ben-zhi-xing-mysql-cao-zuo/">
        </link>
        <updated>2020-11-11T02:26:52.000Z</updated>
        <content type="html"><![CDATA[<pre><code>mysql -uxxx -pxxxx &lt;&lt;EOF
use $DB;

CREATE TABLE $TB  (
  AAA varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  BBB varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  INDEX ym_index(BBB) USING BTREE
) ENGINE = MyISAM CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;
EOF
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[shell脚本执行mysql命令并将结果赋值给变量]]></title>
        <id>https://mycodemylife.github.io/post/shell-jiao-ben-zhi-xing-mysql-ming-ling-bing-jiang-jie-guo-fu-zhi-gei-bian-liang/</id>
        <link href="https://mycodemylife.github.io/post/shell-jiao-ben-zhi-xing-mysql-ming-ling-bing-jiang-jie-guo-fu-zhi-gei-bian-liang/">
        </link>
        <updated>2020-11-11T02:20:37.000Z</updated>
        <content type="html"><![CDATA[<pre><code>TEMP=$(mysql -h192.168.x.x -uroot -p'xxxxxxxx' --database xxx  -s -e &quot;select flag from table&quot;)
echo $TEMP
</code></pre>
<p>解释：-s 忽略表头  -e执行命令</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[mysql只导出数据或导出结构]]></title>
        <id>https://mycodemylife.github.io/post/mysql-zhi-dao-chu-shu-ju-huo-dao-chu-jie-gou/</id>
        <link href="https://mycodemylife.github.io/post/mysql-zhi-dao-chu-shu-ju-huo-dao-chu-jie-gou/">
        </link>
        <updated>2020-09-23T01:07:33.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>
<p>导出结构不导出数据<br>
mysqldump -d 数据库名 -uroot -p &gt; xxx.sql</p>
</li>
<li>
<p>导出数据不导出结构<br>
mysqldump -t 数据库名 -uroot -p &gt; xxx.sql</p>
</li>
<li>
<p>导出数据和表结构<br>
mysqldump 数据库名 -uroot -p &gt; xxx.sql</p>
</li>
<li>
<p>导出特定表的结构<br>
mysqldump -uroot -p -B 数据库名 --table 表名 &gt; xxx.sql</p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[mysql导出数据时排除某表]]></title>
        <id>https://mycodemylife.github.io/post/mysql-dao-chu-shu-ju-shi-pai-chu-mou-biao/</id>
        <link href="https://mycodemylife.github.io/post/mysql-dao-chu-shu-ju-shi-pai-chu-mou-biao/">
        </link>
        <updated>2020-09-23T01:04:09.000Z</updated>
        <content type="html"><![CDATA[<pre><code>mysqldump -uroot -p123456 dbname --ignore-table=dbname.tables1  --ignore-table=dbname.table2 &gt;/tmp/dbname_timestamp.sql
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[linux 命令 统计某时间段打出的日志有多少行]]></title>
        <id>https://mycodemylife.github.io/post/tong-ji-mou-shi-jian-duan-da-chu-de-ri-zhi-you-duo-shao-xing/</id>
        <link href="https://mycodemylife.github.io/post/tong-ji-mou-shi-jian-duan-da-chu-de-ri-zhi-you-duo-shao-xing/">
        </link>
        <updated>2020-09-15T06:43:42.000Z</updated>
        <content type="html"><![CDATA[<pre><code>sed -n '/Tue Sep 15 00:00:00/,/Tue Sep 15 23:59:59/p' catalina.out |grep '调用方法'|wc -l
</code></pre>
<p>日志中有输出时间，然后就是取时间段，再过滤，然后统计行数</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[sed命令进行字符串替换]]></title>
        <id>https://mycodemylife.github.io/post/sed-ming-ling-jin-xing-zi-fu-chuan-ti-huan/</id>
        <link href="https://mycodemylife.github.io/post/sed-ming-ling-jin-xing-zi-fu-chuan-ti-huan/">
        </link>
        <updated>2020-09-14T05:36:45.000Z</updated>
        <content type="html"><![CDATA[<p>命令格式1：sed -i  's/原字符串/新字符串/' 文件<br>
只匹配第一个符合条件的</p>
<p>命令格式2：sed -i 's/原字符串/新字符串/g' 文件<br>
匹配所有符合条件的</p>
<p>命令格式3：sed -i '行号c 新字符串' 文件<br>
匹配某一行</p>
<p>命令格式4：sed -i '起始行号，终止行号c 新字符串' 文件<br>
匹配从某一行到某一行</p>
<p>命令格式5：sed -e 命令1 -e 命令2 -e 命令3<br>
多条命令执行</p>
<p>-i  将结果保存到文件中，不加则显示在控制台</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python中字符串和字节数组转换]]></title>
        <id>https://mycodemylife.github.io/post/python-zhong-zi-fu-chuan-he-zi-jie-shu-zu-zhuan-huan/</id>
        <link href="https://mycodemylife.github.io/post/python-zhong-zi-fu-chuan-he-zi-jie-shu-zu-zhuan-huan/">
        </link>
        <updated>2020-09-11T01:30:03.000Z</updated>
        <content type="html"><![CDATA[<p>byte = b&quot;abcd&quot;  # 字节数组<br>
strstr = &quot;efgh&quot;  # 字符串<br>
print(type(strstr))</p>
<p>byte2str = byte.decode(encoding='UTF-8') # 字节数组转字符串<br>
print(byte2str,type(byte2str))</p>
<p>str2bytes = strstr.encode(encoding='UTF-8')  # 字符串转字节数组<br>
print(str2bytes,type(str2bytes))</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python调用webservice接口]]></title>
        <id>https://mycodemylife.github.io/post/python-diao-yong-webservice-jie-kou/</id>
        <link href="https://mycodemylife.github.io/post/python-diao-yong-webservice-jie-kou/">
        </link>
        <updated>2020-09-11T01:23:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="导包">导包</h3>
<pre><code>from suds.client import Client
</code></pre>
<h3 id="代码">代码</h3>
<pre><code>url = &quot;http://domain?wsdl&quot;
headers = {'Content-Type': 'application/soap+xml;charset=&quot;UTF-8&quot;'}
client = Client(url,headers=headers,faults=False,timeout=15)
client.set_options(location=&quot;http://domain?wsdl&quot;)
</code></pre>
<p>注意：可以指定location，这会覆盖从接口获得的location</p>
<h3 id="结果">结果</h3>
<pre><code>resp = client.service.xxxx_getXXXX(param)
print(resp)
</code></pre>
]]></content>
    </entry>
</feed>