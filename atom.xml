<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mycodemylife.github.io</id>
    <title>七彩旋律</title>
    <updated>2020-08-24T07:14:30.470Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://mycodemylife.github.io"/>
    <link rel="self" href="https://mycodemylife.github.io/atom.xml"/>
    <logo>https://mycodemylife.github.io/images/avatar.png</logo>
    <icon>https://mycodemylife.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 七彩旋律</rights>
    <entry>
        <title type="html"><![CDATA[jQuery获取元素的兄弟节点]]></title>
        <id>https://mycodemylife.github.io/post/jquery-huo-qu-yuan-su-de-xiong-di-jie-dian/</id>
        <link href="https://mycodemylife.github.io/post/jquery-huo-qu-yuan-su-de-xiong-di-jie-dian/">
        </link>
        <updated>2020-08-24T07:12:07.000Z</updated>
        <content type="html"><![CDATA[<pre><code>$('#id').siblings()   当前元素所有的兄弟节点
$('#id').prev()       当前元素前一个兄弟节点
$('#id').prevaAll()   当前元素之前所有的兄弟节点
$('#id').next()       当前元素之后第一个兄弟节点
$('#id').nextAll()    当前元素之后所有的兄弟节点
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[centos6防火墙]]></title>
        <id>https://mycodemylife.github.io/post/centos6-fang-huo-qiang/</id>
        <link href="https://mycodemylife.github.io/post/centos6-fang-huo-qiang/">
        </link>
        <updated>2020-08-21T06:24:21.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-shell"> #清除预设表filter中的所有规则链的规则
   iptables -F
   #清除预设表filter中使用者自定链中的规则
   iptables -X
   #保存iptables配置
   service iptables save
   #重启iptables服务
   service iptables restart
   #iptables服务状态
   service iptables status
   #iptables服务启动
   service iptables start
   #iptables服务停止
   service iptables stop
   #查看iptables规则
   iptables -L -n
   #查看iptables规则文件
   cat /etc/sysconfig/iptables
   #设定预设规则
   iptables -P INPUT DROP
   iptables -P OUTPUT ACCEPT
   iptables -P FORWARD DROP
   #开启22端口
   iptables -A INPUT -p tcp --dport 22 -j ACCEPT
   #如果OUTPUT设置成DROP需要添加 iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT
   #关闭22端口 iptables -D INPUT -p tcp --dport 22 -j ACCEPT
   #开启常用端口
   iptables -A INPUT -p tcp --dport 80 -j ACCEPT
   iptables -A INPUT -p tcp --dport 3306 -j ACCEPT
   #iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT
   #iptables -A OUTPUT -p tcp --sport 3306 -j ACCEPT
   #iptables -A INPUT -p tcp --dport 20 -j ACCEPT
   #iptables -A INPUT -p tcp --dport 21 -j ACCEPT
   #iptables -A INPUT -p tcp --dport 10000 -j ACCEPT
   #iptables -A INPUT -p tcp --dport 25 -j ACCEPT
   #iptables -A INPUT -p tcp --dport 110 -j ACCEPT
   #iptables -A INPUT -p udp --dport 53 -j ACCEPT
   #允许ping
   iptables -A INPUT -p icmp -j ACCEPT
   #如果OUTPUT设置成DROP需要添加 iptables -A OUTPUT -p icmp -j ACCEPT
   #允许loopback
   iptables -A INPUT -i lo -p all -j ACCEPT
   #如果OUTPUT设置成DROP需要添加 iptables -A OUTPUT -o lo -p all -j ACCEPT
   #屏蔽指定ip
   #iptables -A INPUT -p tcp -s 192.168.10.1 -j DROP
   #减少不安全的端口连接
   #iptables -A OUTPUT -p tcp --sport 31337 -j DROP
   #iptables -A OUTPUT -p tcp --dport 31337 -j DROP
   #允许某个IP远程连接
   #iptables -A INPUT -s 192.168.10.1 -p tcp --dport 22 -j ACCEPT
   #允许某个网段的IP远程连接
   iptables -A INPUT -s 192.168.10.0/24 -p tcp --dport 22 -j ACCEPT
   #允许指定网段通过、指定网口通过SSH连接本机
   #iptables -A INPUT -i eth0 -p tcp -s 192.168.10.0/24 --dport 22 -m state --state NEW,ESTABLESHED -j ACCEPT
   #iptables -A OUTPUT -o eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT
   #iptables -A INPUT -i eth0 -p tcp -s 192.168.10.0/24 --dport 22 -m state --state ESTABLESHED -j ACCEPT
   #iptables -A OUTPUT -o eth0 -p tcp --sport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
   #开启转发功能
   #iptables -A FORWARD -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
   #iptables -A FORWARD -i eth1 -o eh0 -j ACCEPT
   #丢弃坏的TCP包
   #iptables -A FORWARD -p TCP ! --syn -m state --state NEW -j DROP
   #处理IP碎片数量,防止攻击,允许每秒100个
   #iptables -A FORWARD -f -m limit --limit 100/s --limit-burst 100 -j ACCEPT
   #设置ICMP包过滤,允许每秒1个包,限制触发条件是10个包
   #iptables -A FORWARD -p icmp -m limit --limit 1/s --limit-burst 10 -j ACCEPT
   #丢弃非法连接
   iptables -A INPUT -m state --state INVALID -j DROP
   iptables -A OUTPUT -m state --state INVALID -j DROP
   iptables -A FORWARD -m state --state INVALID -j DROP
   #允许所有已经建立的和相关的连接
   iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
   iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT


－－###############配置NAT表防火墙###############

   #查看NAT表规则
   iptables -t nat -L
   #清除NAT规则
   iptables -F -t nat
   iptables -X -t nat
   iptables -Z -t nat
   #防止外网用内网IP欺骗
   #iptables -t nat -A PREROUTING -i eth0 -s 10.0.0.0/8 -j DROP
   #iptables -t nat -A PREROUTING -i eth0 -s 172.16.0.0/12 -j DROP
   #iptables -t nat -A PREROUTING -i eth0 -s 192.168.0.0/16 -j DROP
   #禁止与某个IP的所有连接
   #iptables -t nat -A PREROUTING -d 192.168.10.1 -j DROP
   #禁用80端口
   #iptables -t nat -A PREROUTING -p tcp --dport 80 -j DROP
   #禁用某个IP的80端口
   #iptables -t nat -A PREROUTING -p tcp --dport 21 -d 192.168.10.1 -j DROP
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[centos7防火墙]]></title>
        <id>https://mycodemylife.github.io/post/centos7-fang-huo-qiang/</id>
        <link href="https://mycodemylife.github.io/post/centos7-fang-huo-qiang/">
        </link>
        <updated>2020-08-21T06:23:46.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-sh">systemctl status firewalld.service		查看firewalld状态
systemctl start firewalld.service		开启firewalld
systemctl stop firewalld.service		关闭firewalld
firewall-cmd --zone=public --add-port=80/tcp --permanent	永久添加指定端口
firewall-cmd --zone=public --remove-port=8080/tcp --permanent	永久移除指定端口
firewall-cmd --query-port=3306/tcp		查看端口是否被开放，返回yes/no
firewall-cmd --list-all		查看所有开放的端口
systemctl enable firewalld.service		开启自启
systemctl disable firewalld.service		禁止开机自启
systemctl is-enabled firewalld.service		查看是否开机自启
firewall-cmd --reload		更新防火墙规则（立即生效，永久添加时需要reload）

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu防火墙]]></title>
        <id>https://mycodemylife.github.io/post/ubuntu-fang-huo-qiang/</id>
        <link href="https://mycodemylife.github.io/post/ubuntu-fang-huo-qiang/">
        </link>
        <updated>2020-08-21T06:23:17.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-sh">1.安装

sudo apt-get install ufw

2.启用

sudo ufw enable

sudo ufw default deny

运行以上两条命令后，开启了防火墙，并在系统启动时自动开启。关闭所有外部对本机的访问，但本机访问外部正常。

3.开启/禁用

sudo ufw allow|deny [service]

打开或关闭某个端口，例如：

sudo ufw allow smtp　允许所有的外部IP访问本机的25/tcp (smtp)端口

sudo ufw allow 22/tcp 允许所有的外部IP访问本机的22/tcp (ssh)端口

sudo ufw allow 53 允许外部访问53端口(tcp/udp)

sudo ufw allow from 192.168.1.100 允许此IP访问所有的本机端口

sudo ufw allow proto udp 192.168.0.1 port 53 to 192.168.0.2 port 53

sudo ufw deny smtp 禁止外部访问smtp服务

sudo ufw delete allow smtp 删除上面建立的某条规则

4.查看防火墙状态

sudo ufw status
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[IE  360安全浏览器 兼容]]></title>
        <id>https://mycodemylife.github.io/post/ie-360-an-quan-liu-lan-qi-jian-rong/</id>
        <link href="https://mycodemylife.github.io/post/ie-360-an-quan-liu-lan-qi-jian-rong/">
        </link>
        <updated>2020-08-21T06:21:48.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-css">/* IE8+ */
.nav-mini.navDiv {
	overflow: visible\0;
}
</code></pre>
<h3 id="在其他浏览器下不展示在ie会展示">在其他浏览器下不展示，在IE会展示</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[鼠标每点击一次就展示一个效果]]></title>
        <id>https://mycodemylife.github.io/post/shu-biao-mei-dian-ji-yi-ci-jiu-zhan-shi-yi-ge-xiao-guo/</id>
        <link href="https://mycodemylife.github.io/post/shu-biao-mei-dian-ji-yi-ci-jiu-zhan-shi-yi-ge-xiao-guo/">
        </link>
        <updated>2020-08-21T06:20:18.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-js">$(&quot;body&quot;).click(function(e) {
        var a = new Array(&quot;❤主人你最帅❤&quot;,&quot;❤你最有钱❤&quot;,&quot;❤漂亮姑娘都爱你❤&quot;);
        var $i = $(&quot;&lt;span&gt;&lt;/span&gt;&quot;).text(a[a_idx]);
        a_idx = (a_idx + 1) % a.length;
        var x = e.pageX,
        y = e.pageY;
        $i.css({
            &quot;z-index&quot;: 99999999999999999999999,
            &quot;top&quot;: y - 20,
            &quot;left&quot;: x,
            &quot;position&quot;: &quot;absolute&quot;,
            &quot;font-weight&quot;: &quot;bold&quot;,
            &quot;color&quot;: &quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;
        });
        $(&quot;body&quot;).append($i);
        $i.animate({
            &quot;top&quot;: y - 180,
            &quot;opacity&quot;: 0
        },
        1500,
        function() {
            $i.remove();
        });
    });
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[mysql  IPV4  IPV6 转换以及字符截取]]></title>
        <id>https://mycodemylife.github.io/post/mysql-ipv4-ipv6-zhuan-huan-yi-ji-zi-fu-jie-qu/</id>
        <link href="https://mycodemylife.github.io/post/mysql-ipv4-ipv6-zhuan-huan-yi-ji-zi-fu-jie-qu/">
        </link>
        <updated>2020-08-21T06:08:17.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>
<h3 id="ipv4转数值">IPV4转数值</h3>
</li>
</ol>
<pre><code class="language-mysql">SELECT INET_ATON('192.168.1.1');
</code></pre>
<ol start="2">
<li>
<h3 id="数值转ipv4">数值转IPV4</h3>
</li>
</ol>
<pre><code class="language-mysql">SELECT INET_NTOA('3232235777');
</code></pre>
<ol start="3">
<li>
<h3 id="ipv6转数值">IPV6转数值</h3>
</li>
</ol>
<pre><code class="language-mysql">SELECT HEX(INET6_ATON('123:33:1:3:2:3:4:5')) from DUAL;
</code></pre>
<ol start="4">
<li>
<h3 id="数值转ipv6">数值转IPV6</h3>
</li>
</ol>
<pre><code class="language-mysql">SELECT INET6_NTOA(UNHEX(01230033000100030002000300040005)) from DUAL;
</code></pre>
<ol start="5">
<li>
<h3 id="字符截取">字符截取</h3>
</li>
</ol>
<pre><code class="language-mysql">select substring_index(substring_index('ftp://206.189.90.62/sensi.sh', '/',3),'/',-1) from dual
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[pip从国内安装]]></title>
        <id>https://mycodemylife.github.io/post/pip-cong-guo-nei-an-zhuang/</id>
        <link href="https://mycodemylife.github.io/post/pip-cong-guo-nei-an-zhuang/">
        </link>
        <updated>2020-08-21T06:05:22.000Z</updated>
        <content type="html"><![CDATA[<pre><code>pip install abc -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com
</code></pre>
<p>-i  指定源</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[mysql 自带加密函数]]></title>
        <id>https://mycodemylife.github.io/post/mysql-zi-dai-jia-mi-han-shu/</id>
        <link href="https://mycodemylife.github.io/post/mysql-zi-dai-jia-mi-han-shu/">
        </link>
        <updated>2020-08-21T05:58:54.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>
<h2 id="加密">加密</h2>
</li>
</ol>
<pre><code class="language-mysql">SELECT Hex(AES_ENCRYPT(&quot;hello world&quot;,&quot;1q2w3e4r5t&quot;));
</code></pre>
<ol start="2">
<li>
<h2 id="解密">解密</h2>
</li>
</ol>
<pre><code class="language-mysql">SELECT AES_DECRYPT(UNHEX(&quot;79A3B96BF32FABEAB0BD03D56044FFDF&quot;),&quot;1q2w3e4r5t&quot;);
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[oracle关闭和重启]]></title>
        <id>https://mycodemylife.github.io/post/oracle-guan-bi-he-chong-qi/</id>
        <link href="https://mycodemylife.github.io/post/oracle-guan-bi-he-chong-qi/">
        </link>
        <updated>2020-08-21T05:47:39.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-sh">启动：
1、先登录服务器后，切换到oracle用户状态下： su oracle

2、检查oracle监听器运行状态：lsnrctl status命令查看。

表示监听没有启动。

3、执行启动监听，通过命令：lsnrctl start （lsnrctl stop 关闭监听）

表示端口已启动成功。

4、如果启动报错，listener.ora文件打开，调整HOST IP

5、进入sqlplus，命令：sqlplus /nolog

6、管理员sysdba权限登陆oracle：conn /as sysdba

7、启动服务（实例）：startup


重启：先关闭再连接
sqlplus sys/'pass!'@ORCL as sysdba

shutdown immediate;

退出 exit

sqlplus /nolog

conn /as sysdba

startup
</code></pre>
]]></content>
    </entry>
</feed>