<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mycodemylife.github.io</id>
    <title>七彩旋律</title>
    <updated>2020-09-15T06:46:39.130Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://mycodemylife.github.io"/>
    <link rel="self" href="https://mycodemylife.github.io/atom.xml"/>
    <logo>https://mycodemylife.github.io/images/avatar.png</logo>
    <icon>https://mycodemylife.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 七彩旋律</rights>
    <entry>
        <title type="html"><![CDATA[linux 命令 统计某时间段打出的日志有多少行]]></title>
        <id>https://mycodemylife.github.io/post/tong-ji-mou-shi-jian-duan-da-chu-de-ri-zhi-you-duo-shao-xing/</id>
        <link href="https://mycodemylife.github.io/post/tong-ji-mou-shi-jian-duan-da-chu-de-ri-zhi-you-duo-shao-xing/">
        </link>
        <updated>2020-09-15T06:43:42.000Z</updated>
        <content type="html"><![CDATA[<pre><code>sed -n '/Tue Sep 15 00:00:00/,/Tue Sep 15 23:59:59/p' catalina.out |grep '调用方法'|wc -l
</code></pre>
<p>日志中有输出时间，然后就是取时间段，再过滤，然后统计行数</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[sed命令进行字符串替换]]></title>
        <id>https://mycodemylife.github.io/post/sed-ming-ling-jin-xing-zi-fu-chuan-ti-huan/</id>
        <link href="https://mycodemylife.github.io/post/sed-ming-ling-jin-xing-zi-fu-chuan-ti-huan/">
        </link>
        <updated>2020-09-14T05:36:45.000Z</updated>
        <content type="html"><![CDATA[<p>命令格式1：sed -i  's/原字符串/新字符串/' 文件<br>
只匹配第一个符合条件的</p>
<p>命令格式2：sed -i 's/原字符串/新字符串/g' 文件<br>
匹配所有符合条件的</p>
<p>命令格式3：sed -i '行号c 新字符串' 文件<br>
匹配某一行</p>
<p>命令格式4：sed -i '起始行号，终止行号c 新字符串' 文件<br>
匹配从某一行到某一行</p>
<p>命令格式5：sed -e 命令1 -e 命令2 -e 命令3<br>
多条命令执行</p>
<p>-i  将结果保存到文件中</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python中字符串和字节数组转换]]></title>
        <id>https://mycodemylife.github.io/post/python-zhong-zi-fu-chuan-he-zi-jie-shu-zu-zhuan-huan/</id>
        <link href="https://mycodemylife.github.io/post/python-zhong-zi-fu-chuan-he-zi-jie-shu-zu-zhuan-huan/">
        </link>
        <updated>2020-09-11T01:30:03.000Z</updated>
        <content type="html"><![CDATA[<p>byte = b&quot;abcd&quot;  # 字节数组<br>
strstr = &quot;efgh&quot;  # 字符串<br>
print(type(strstr))</p>
<p>byte2str = byte.decode(encoding='UTF-8') # 字节数组转字符串<br>
print(byte2str,type(byte2str))</p>
<p>str2bytes = strstr.encode(encoding='UTF-8')  # 字符串转字节数组<br>
print(str2bytes,type(str2bytes))</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python调用webservice接口]]></title>
        <id>https://mycodemylife.github.io/post/python-diao-yong-webservice-jie-kou/</id>
        <link href="https://mycodemylife.github.io/post/python-diao-yong-webservice-jie-kou/">
        </link>
        <updated>2020-09-11T01:23:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="导包">导包</h3>
<pre><code>from suds.client import Client
</code></pre>
<h3 id="代码">代码</h3>
<pre><code>url = &quot;http://domain?wsdl&quot;
headers = {'Content-Type': 'application/soap+xml;charset=&quot;UTF-8&quot;'}
client = Client(url,headers=headers,faults=False,timeout=15)
client.set_options(location=&quot;http://domain?wsdl&quot;)
</code></pre>
<p>注意：可以指定location，这会覆盖从接口获得的location</p>
<h3 id="结果">结果</h3>
<pre><code>resp = client.service.xxxx_getXXXX(param)
print(resp)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Markdown 文档生成工具]]></title>
        <id>https://mycodemylife.github.io/post/markdown-wen-dang-sheng-cheng-gong-ju/</id>
        <link href="https://mycodemylife.github.io/post/markdown-wen-dang-sheng-cheng-gong-ju/">
        </link>
        <updated>2020-09-01T01:54:45.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>loppo: 非常简单的静态站点生成器</li>
<li>idoc：简单的文档生成工具</li>
<li>gitbook：大名鼎鼎的文档协作工具</li>
<li>docsify：一个神奇的文档站点生成器，简单轻巧，无需静态构建html</li>
</ol>
<p>http://www.mamicode.com/info-detail-2662951.html</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[struts2.3升级到struts2.5]]></title>
        <id>https://mycodemylife.github.io/post/struts23-sheng-ji-dao-struts25/</id>
        <link href="https://mycodemylife.github.io/post/struts23-sheng-ji-dao-struts25/">
        </link>
        <updated>2020-08-31T05:42:34.000Z</updated>
        <content type="html"><![CDATA[<p>具体内容可以直接百度，很多！<br>
这里记录一下本人和网上的不同点。由于自定义实现了过滤，所以以前的ActionContext.getParameters()返回Map&lt;String, Object&gt;，现在返回的是HttpParameters，所以需要转换一下。</p>
<pre><code>Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();
HttpParameters parameters = ac.getParameters();
for (Entry&lt;String, Parameter&gt; entry : parameters.entrySet()) {
    map.put(entry.getValue().getName(), entry.getValue().getMultipleValues());
}
return map;
</code></pre>
<p>大体的流程就是改pom--改struts--改web.xml.<br>
根据错误提示改asm，改commons-lang3，改spring版本</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[spring4.x不再提供 HibernateTemplate.saveOrUpdateAll(Collection) 的支持]]></title>
        <id>https://mycodemylife.github.io/post/spring4x-bu-zai-ti-gong-hibernatetemplatesaveorupdateallcollection-de-zhi-chi/</id>
        <link href="https://mycodemylife.github.io/post/spring4x-bu-zai-ti-gong-hibernatetemplatesaveorupdateallcollection-de-zhi-chi/">
        </link>
        <updated>2020-08-27T02:04:51.000Z</updated>
        <content type="html"><![CDATA[<h2 id="报错the-method-saveorupdateallcollection-is-undefined-for-the-type-hibernatetemplate">报错：The method saveOrUpdateAll(Collection) is undefined for the type HibernateTemplate</h2>
<p>在spring2<API FOR SPRING2> 和spring 3的文档 <API FOR SPRING3>中会发现：从 spring2.5 起，官方就建议不要使用该方法，并且在 spring4.x中完全摈弃了这个方法。</p>
<p>saveOrUpdateAll 的声明如下：</p>
<pre><code>public void saveOrUpdateAll(Collection entities) throws DataAccessException
</code></pre>
<p>参数中接收一个Collection。</p>
<p>原项目中代码如此：</p>
<pre><code>super.getHibernateTemplate().saveOrUpdateAll(entitys);
</code></pre>
<p>可以修改为这样：</p>
<pre><code>for(Object t : entities) {
   getHibernateTemplate().saveOrUpdate(t);
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[phpstudy 启动导致本地的数据库服务丢失]]></title>
        <id>https://mycodemylife.github.io/post/phpstudy-qi-dong-dao-zhi-ben-di-de-shu-ju-ku-fu-wu-diu-shi/</id>
        <link href="https://mycodemylife.github.io/post/phpstudy-qi-dong-dao-zhi-ben-di-de-shu-ju-ku-fu-wu-diu-shi/">
        </link>
        <updated>2020-08-25T01:01:10.000Z</updated>
        <content type="html"><![CDATA[<p>mysqld --install MySQL5.5  换一个名字就ok！！！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Win下查看端口是否被占用以及所属程序]]></title>
        <id>https://mycodemylife.github.io/post/win-xia-cha-kan-duan-kou-shi-fou-bei-zhan-yong-yi-ji-suo-shu-cheng-xu/</id>
        <link href="https://mycodemylife.github.io/post/win-xia-cha-kan-duan-kou-shi-fou-bei-zhan-yong-yi-ji-suo-shu-cheng-xu/">
        </link>
        <updated>2020-08-25T00:57:37.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>
<h3 id="查看端口号是否被占用">查看端口号是否被占用</h3>
</li>
</ol>
<pre><code>netstat -ano|findstr 3306
</code></pre>
<ol start="2">
<li>
<h3 id="查看进程所属应用程序">查看进程所属应用程序</h3>
</li>
</ol>
<pre><code>tasklist|findstr 1596
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[jQuery获取元素的兄弟节点]]></title>
        <id>https://mycodemylife.github.io/post/jquery-huo-qu-yuan-su-de-xiong-di-jie-dian/</id>
        <link href="https://mycodemylife.github.io/post/jquery-huo-qu-yuan-su-de-xiong-di-jie-dian/">
        </link>
        <updated>2020-08-24T07:12:07.000Z</updated>
        <content type="html"><![CDATA[<pre><code>$('#id').siblings()   当前元素所有的兄弟节点
$('#id').prev()       当前元素前一个兄弟节点
$('#id').prevaAll()   当前元素之前所有的兄弟节点
$('#id').next()       当前元素之后第一个兄弟节点
$('#id').nextAll()    当前元素之后所有的兄弟节点
</code></pre>
]]></content>
    </entry>
</feed>