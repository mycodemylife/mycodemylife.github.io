<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mycodemylife.github.io</id>
    <title>七彩旋律</title>
    <updated>2020-12-23T01:02:55.768Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://mycodemylife.github.io"/>
    <link rel="self" href="https://mycodemylife.github.io/atom.xml"/>
    <logo>https://mycodemylife.github.io/images/avatar.png</logo>
    <icon>https://mycodemylife.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 七彩旋律</rights>
    <entry>
        <title type="html"><![CDATA[zip、unzip、tar]]></title>
        <id>https://mycodemylife.github.io/post/zipunziptar/</id>
        <link href="https://mycodemylife.github.io/post/zipunziptar/">
        </link>
        <updated>2020-12-23T00:51:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="zip">zip</h3>
<p>-r 递归压缩，将指定目录下的所有文件以及子目录全部压缩<br>
-d 从压缩文件内删除指定的文件<br>
-i “文件列表” 只压缩文件列表中的文件<br>
-x “文件列表” 压缩时排除文件列表中指定的文件<br>
-u 更新文件到压缩文件中<br>
-m 将文件加入压缩文件压缩后，删除原始文件，即把文件移到压缩文件中<br>
-F 尝试修复损坏的压缩文件<br>
-T 检查压缩文件内的每个文件是否正确无误<br>
-9 更好的压缩<br>
-q 安静模式</p>
<pre><code>zip -rq test.zip test -x test/logs/*
</code></pre>
<h3 id="unzip">unzip</h3>
<p>-v	执行时显示详细的信息<br>
-n	解压缩时不要覆盖原有的文件<br>
-o	不必先询问用户，unzip执行后覆盖原有的文件<br>
-q	执行时不显示任何信息<br>
-d&lt;目录&gt;	指定文件解压缩后所要存储的目录<br>
-x&lt;文件&gt;	指定不要处理.zip压缩文件中的哪些文件</p>
<h3 id="tar">tar</h3>
<p>解压：tar -zxvf test.tar.gz<br>
压缩：tar -zcvf test.tar.gz  test<br>
排除目录中的某些文件:tar --exclude=目录名/* 或者 文件名 -zcvf 备份文件名.tgz 目录名<br>
<a href="http://linux.51yip.com/search/tar">详解</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MariaDB设置初始化密码及修改密码]]></title>
        <id>https://mycodemylife.github.io/post/mariadb-she-zhi-chu-shi-hua-mi-ma-ji-xiu-gai-mi-ma/</id>
        <link href="https://mycodemylife.github.io/post/mariadb-she-zhi-chu-shi-hua-mi-ma-ji-xiu-gai-mi-ma/">
        </link>
        <updated>2020-12-22T05:23:53.000Z</updated>
        <content type="html"><![CDATA[<p>默认情况下，新安装的 mariadb 的密码为空，在shell终端直接输入 mysql 就能登陆数据库。<br>
如果是刚安装第一次使用，请使用 mysql_secure_installation 命令初始化。</p>
<h3 id="mariadb设置初始化密码及修改密码">MariaDB设置初始化密码及修改密码</h3>
<p>方法一：<br>
[root@localhost ~]# mysql -uroot<br>
MariaDB [(none)]&gt; use mysql;<br>
MariaDB [mysql]&gt; UPDATE mysql.user SET password = PASSWORD('newpassward') WHERE user = 'root';<br>
MariaDB [mysql]&gt; FLUSH PRIVILEGES;</p>
<p>方法二：<br>
[root@localhost ~]# mysql -uroot<br>
MariaDB [(none)]&gt; use mysql;<br>
MariaDB [mysql]&gt; SET password=PASSWORD('newpassward');<br>
MariaDB [mysql]&gt; FLUSH PRIVILEGES;</p>
<p>方法三：<br>
[root@localhost ~]# mysqladmin -u root password 'newpassword'<br>
如果root已经设置过密码，采用如下方法<br>
[root@localhost ~]# mysqladmin -u root -p 'oldpassword' password 'newpassword'</p>
<h3 id="远程登录">远程登录</h3>
<p>root账户中的host项是localhost表示该账号只能进行本地登录，我们需要修改权限，输入命令：<br>
GRANT ALL PRIVILEGES ON <em>.</em> TO 'root'@'%' IDENTIFIED BY 'password' WITH GRANT OPTION;<br>
修改权限。%表示针对所有IP<br>
最后别忘了<br>
FLUSH PRIVILEGES;</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[mysql导入sql文件]]></title>
        <id>https://mycodemylife.github.io/post/mysql-dao-ru-sql-wen-jian/</id>
        <link href="https://mycodemylife.github.io/post/mysql-dao-ru-sql-wen-jian/">
        </link>
        <updated>2020-12-11T06:06:05.000Z</updated>
        <content type="html"><![CDATA[<pre><code>mysql -uroot -proot database &lt; sql.sql
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[div变大]]></title>
        <id>https://mycodemylife.github.io/post/div-bian-da/</id>
        <link href="https://mycodemylife.github.io/post/div-bian-da/">
        </link>
        <updated>2020-11-16T02:09:44.000Z</updated>
        <content type="html"><![CDATA[<pre><code>.g-change-big:hover {
    transform: scaleX(1.05) scaleY(1.05) scaleZ(1);
    -webkit-transform: scaleX(1.05) scaleY(1.05) scaleZ(1);
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[四面阴影]]></title>
        <id>https://mycodemylife.github.io/post/si-mian-yin-ying/</id>
        <link href="https://mycodemylife.github.io/post/si-mian-yin-ying/">
        </link>
        <updated>2020-11-16T02:05:49.000Z</updated>
        <content type="html"><![CDATA[<pre><code>四面阴影：
.g-box-shadow-animation:hover,g-box-shadow:hover {
    box-shadow: 1px 1px 8px 0px #535050;
    -webkit-box-shadow: 1px 1px 8px 0px #535050;
    -moz-box-shadow: 1px 1px 8px 0px #535050;
    -o-box-shadow: 1px 1px 8px 0px #535050;
    -ms-box-shadow: 1px 1px 8px 0px #535050;
}
.g-box-shadow-animation {
    transition: all .7s ease-out;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[oracle导入表时跳过某些表以及导入方式]]></title>
        <id>https://mycodemylife.github.io/post/oracle-dao-ru-biao-shi-tiao-guo-mou-xie-biao-yi-ji-dao-ru-fang-shi/</id>
        <link href="https://mycodemylife.github.io/post/oracle-dao-ru-biao-shi-tiao-guo-mou-xie-biao-yi-ji-dao-ru-fang-shi/">
        </link>
        <updated>2020-11-13T02:42:30.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-在导入时目标表已经存在该如何把数据追加进入目标表中">1. 在导入时，目标表已经存在，该如何把数据追加进入目标表中</h2>
<pre><code>当使用IMPDP完成数据库导入时，如遇到表已存在时，Oracle提供给我们如下四种处理方式：
    SKIP：跳过已经存在的表，继续导入下一个对象，如果CONTENT设置了DATA_ONLY参数，则不能使用SKIP
    APPEND：不会影响已存在的数据，在原有数据表的基础上继续增加数据
    REPLACE：先删除掉表，然后创建表，最后完成数据插入
    TRUNCATE：删除已存在的行，然后插入所有的数据
我们需要在导入语句中使用TABLE_EXISTS_ACTION参数指定导入数据方式，方法如下
    impdp zcgl/system dumpfile=GUIDONG.DMP  directory=data_pump_dir REMAP_TABLESPACE=ASSETS:ZCGL REMAP_SCHEMA=TESTUSER:ZCGL TABLE_EXISTS_ACTION=APPEND logfile=TEST20191111.log
</code></pre>
<h2 id="2-导入时跳过某些表">2. 导入时跳过某些表</h2>
<pre><code>一般剔除操作使用的是exclude，在剔除表时，使用的命令为：
exclude=table:&quot;in('table_name1','table_name2')&quot;
在使用过程中报语法错误，百度发现需要对&quot;,',(,)分别进行转意，命令修改为
exclude=table:\&quot;in\(\'table_name1\',\'table_name2\'\)\&quot;后执行成功。</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[linux下tmp文件会被清理]]></title>
        <id>https://mycodemylife.github.io/post/linux-xia-tmp-wen-jian-hui-bei-qing-li/</id>
        <link href="https://mycodemylife.github.io/post/linux-xia-tmp-wen-jian-hui-bei-qing-li/">
        </link>
        <updated>2020-11-13T01:25:41.000Z</updated>
        <content type="html"><![CDATA[<p>查看规则：</p>
<pre><code>more /etc/cron.daily/tmpwatch
</code></pre>
<p>如果你想将强制删除30天没有访问的文件改为7天，只需将里面的720改为189即可。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Oracle中修改表相关内容]]></title>
        <id>https://mycodemylife.github.io/post/oracle-zhong-xiu-gai-biao-xiang-guan-nei-rong/</id>
        <link href="https://mycodemylife.github.io/post/oracle-zhong-xiu-gai-biao-xiang-guan-nei-rong/">
        </link>
        <updated>2020-11-12T06:03:09.000Z</updated>
        <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">字段的操作</th>
<th style="text-align:center">操作的方法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">修改列名（更新字段）</td>
<td style="text-align:center">alter table 表名 rename column 原列名 to 新列名;</td>
</tr>
<tr>
<td style="text-align:center">添加列</td>
<td style="text-align:center">alter table 表名 add 列名 列类型;</td>
</tr>
<tr>
<td style="text-align:center">删除列</td>
<td style="text-align:center">alter table 表名 drop column 列名；</td>
</tr>
<tr>
<td style="text-align:center">添加列并赋值</td>
<td style="text-align:center">alter table 表名 add 列名 列类型 default 需要赋的值；</td>
</tr>
<tr>
<td style="text-align:center">修改列的数据类型</td>
<td style="text-align:center">alter table 表名 modify 列名 列数据类型；</td>
</tr>
<tr>
<td style="text-align:center">增</td>
<td style="text-align:center">insert into 表名 values(字段1，字段2，字段3，......);</td>
</tr>
<tr>
<td style="text-align:center">删</td>
<td style="text-align:center">delete from 表名 where 列名 = 值；</td>
</tr>
<tr>
<td style="text-align:center">改（单个字段数据）</td>
<td style="text-align:center">update 表名 set 列名 = 值 where 判断条件；（如：where id = 100）</td>
</tr>
<tr>
<td style="text-align:center">改（多个字段数据）</td>
<td style="text-align:center">update  表名   set 列名1 = 值1,     列名2       =  值2        where 判断条件；（如：update t_user set name = '张三'，password = '123456'  where id = 10;）</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[shell脚本执行mysql操作]]></title>
        <id>https://mycodemylife.github.io/post/shell-jiao-ben-zhi-xing-mysql-cao-zuo/</id>
        <link href="https://mycodemylife.github.io/post/shell-jiao-ben-zhi-xing-mysql-cao-zuo/">
        </link>
        <updated>2020-11-11T02:26:52.000Z</updated>
        <content type="html"><![CDATA[<pre><code>mysql -uxxx -pxxxx &lt;&lt;EOF
use $DB;

CREATE TABLE $TB  (
  AAA varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  BBB varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  INDEX ym_index(BBB) USING BTREE
) ENGINE = MyISAM CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;
EOF
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[shell脚本执行mysql命令并将结果赋值给变量]]></title>
        <id>https://mycodemylife.github.io/post/shell-jiao-ben-zhi-xing-mysql-ming-ling-bing-jiang-jie-guo-fu-zhi-gei-bian-liang/</id>
        <link href="https://mycodemylife.github.io/post/shell-jiao-ben-zhi-xing-mysql-ming-ling-bing-jiang-jie-guo-fu-zhi-gei-bian-liang/">
        </link>
        <updated>2020-11-11T02:20:37.000Z</updated>
        <content type="html"><![CDATA[<pre><code>TEMP=$(mysql -h192.168.x.x -uroot -p'xxxxxxxx' --database xxx  -s -e &quot;select flag from table&quot;)
echo $TEMP
</code></pre>
<p>解释：-s 忽略表头  -e执行命令</p>
]]></content>
    </entry>
</feed>